AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Domain:
    Type: String
    Default: sort.brendandagys.com
    Description: Lambda function DNS endpoint.

  HostedZoneId:
    Type: String
    Default: Z1048063LC3J2IKH5GGI
    Description: Hosted Zone in which to deploy the DNS record.

  LambdaFunctionName:
    Type: String
    Default: rust-merge-sort
    Description: Name for the created function in AWS Lambda.

  TlsCertificate:
    Type: String
    Default: arn:aws:acm:us-east-1:708746137251:certificate/d61599f4-ca74-4bb7-893f-ed00e147d33c
    Description: ARN of the TLS certificate used for HTTPS capability.

Resources:
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Rust merge-sort Lambda function API.
      ProtocolType: HTTP

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: Live
      Description: "`Live` stage."
      AutoDeploy: true

  ApiGatewayMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Ref Domain
      ApiId: !Ref ApiGateway
      Stage: !Ref ApiGatewayStage

  ApiGatewayDomainName:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !Ref Domain
      DomainNameConfigurations:
        - EndpointType: REGIONAL
          CertificateArn: !Ref TlsCertificate

  MergeSortFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: rust-merge-sort
        S3Key: bootstrap.zip
      Environment:
        Variables:
          RUST_BACKTRACE: 1
      FunctionName: !Ref LambdaFunctionName
      Handler: bootstrap
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: provided.al2
      TracingConfig:
        Mode: Active

  MergeSortFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref MergeSortFunction

  MergeSortFunctionResourcePolicy:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MergeSortFunction
      Principal: apigateway.amazonaws.com

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Allows the Lambda function minimal permissions to CloudWatch and X-Ray.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      RoleName: !Sub "${AWS::Region}-rust-merge-sort"

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      Description: Lambda proxy integration.
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ""
        - - "arn:"
          - !Ref "AWS::Partition"
          - ":apigateway:"
          - !Ref "AWS::Region"
          - ":lambda:path/2015-03-31/functions/"
          - !GetAtt MergeSortFunction.Arn
          - /invocations
      PayloadFormatVersion: "2.0"

  ApiGatewayRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: "POST"
      AuthorizationType: NONE
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayIntegration

  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt ApiGatewayDomainName.RegionalDomainName
        HostedZoneId: !GetAtt ApiGatewayDomainName.RegionalHostedZoneId
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref Domain
      Type: A
